.data
	Giap: 	.asciiz	"Giap"
	At: 	.asciiz	"At"
	Binh: 	.asciiz	"Binh"
	Dinh:	.asciiz	"Dinh"
	Mau:	.asciiz	"Mau"
	Ky:	.asciiz	"Ky"
	Canh:	.asciiz	"Canh"
	Tan:	.asciiz	"Tan"
	Nham:	.asciiz	"Nham"
	Quy:	.asciiz	"Quy"
	
	Ti:	.asciiz	"Ti"
	Suu:	.asciiz	"Suu"
	Dan:	.asciiz	"Dan"
	Meo:	.asciiz	"Meo"
	Thin:	.asciiz	"Thin"
	Ty:	.asciiz	"Ty"
	Ngo:	.asciiz	"Ngo" 
	Mui:	.asciiz	"Mui" 
	Than:	.asciiz	"Than" 	
	Dau:	.asciiz	"Dau" 
	Tuat:	.asciiz	"Tuat" 
	Hoi:	.asciiz	"Hoi"
#--------------------------------------------------------------------------
main_nhap_time:
	la $a0, TIME_1
	la $a1, str_temp
	jal nhap_time
	add $s0, $zero, $v0	# save TIME_1
	add $s1, $zero, $v1	# save hop le TIME_1
	beq $s1, $0, main_nhap_lai_time 	# khong hop le
	j main_in_yeucau
main_nhap_lai_time:
	la $a0, msg_input_khonghople
	addi $v0, $zero, 4	# syscall print string
	syscall
	j main_nhap_time

 #-----goi ham---------------
 	add $a0, $zero, $s0
	jal CANCHI
	add $a0, $zero, $v0
	addi $v0, $zero, 4	# syscall print string
	syscall
	add $a0, $zero, $v1
	addi $v1, $zero, 4	# syscall print string
	syscall
	j main_exit

  
#--------------------------------------------------------------------------
CANCHI:
	addi $sp, $sp, -16
	sw $ra, 12($sp)

	
	jal Year
	sw $v0, 8($sp)		# save Year(TIME)


	lw $a0, 8($sp)		# get Year(TIME)

	
	addi $t0, $zero, 10 	# Gan bien tam t0 = 10
	
	addi $v1,$v0,8		#Year=Year+8
	addi $v0,$v0,6		#Year=Year+6
	div $v0, $t0		
	mfhi $v0		# $v0 = (Year +6) mod 10

CAN_NEXT:
	addi $t0, $zero,9	
	bne $v0, $t0, CAN_Giap
	la $v0, Quy
	j CAN_end
CAN_Giap:
	addi $t0, $zero,0	
	bne $v0, $t0, CAN_At
	la $v0, Giap
	j CAN_end
CAN_At:
	addi $t0, $zero,1	
	bne $v0, $t0, CAN_Binh
	la $v0, At
	j CAN_end
CAN_Binh:
	addi $t0, $zero,2	
	bne $v0, $t0, CAN_Dinh
	la $v0, Binh
	j CAN_end
CAN_Dinh:
	addi $t0, $zero,3	
	bne $v0, $t0, CAN_Mau
	la $v0, Dinh
	j CAN_end
CAN_Mau:
	addi $t0, $zero,4	
	bne $v0, $t0, CAN_Ky
	la $v0, Mau
	j CAN_end
CAN_Ky:
	addi $t0, $zero,5	
	bne $v0, $t0, CAN_Canh
	la $v0, Ky
	j CAN_end
CAN_Canh:
	addi $t0, $zero,6	
	bne $v0, $t0, CAN_Tan
	la $v0, Canh
	j CAN_end
CAN_Tan:
	addi $t0, $zero,7	
	bne $v0, $t0, CAN_Nham
	la $v0, Tan
	j CAN_end
CAN_Nham:
	addi $t0, $zero,8	
	bne $v0, $t0, CAN_Tan
	la $v0, Nham
	j CAN_end
Nham_Quy:
	la $v0, Quy 
CAN_end:

	addi $t1, $zero, 12 	# Gan bien tam t0 = 12

	div $v1, $t1		
	mfhi $v1		# $v0 = (Year +8) mod 12
CHI_NEXT:
	addi $t1, $zero,11	
	bne $v1, $t1, CHI_ti
	la $v1, Hoi
	j CHI_end
CHI_ti:
	addi $t1, $zero,0	
	bne $v1, $t1, CHI_suu
	la $v1, Ti
	j CAN_end
CHI_suu:
	addi $t1, $zero,1	
	bne $v1, $t1, CHI_dan
	la $v1, Suu
	j CHI_end
CHI_dan:
	addi $t1, $zero,2	
	bne $v1, $t1, CHI_meo
	la $v1, Dan
	j CHI_end
CHI_meo:
	addi $t1, $zero,3	
	bne $v1, $t1, CHI_thin
	la $v1, Meo
	j CHI_end
CHI_thin:
	addi $t1, $zero,4	
	bne $v1, $t1, CHI_ty
	la $v1, Thin
	j CHI_end
CHI_ty:
	addi $t1, $zero,5	
	bne $v1, $t1, CHI_ngo
	la $v1, Ty
	j CHI_end
CHI_ngo:
	addi $t1, $zero,6	
	bne $v1, $t1, CHI_mui
	la $v1, Ngo
	j CHI_end
CHI_mui:
	addi $t1, $zero,7	
	bne $v1, $t1, CHI_than
	la $v1, Mui
	j CHI_end
CHI_than:
	addi $t1, $zero,8	
	bne $v1, $t1, CHI_dau
	la $v1, Than
	j CHI_end
CHI_dau:
	addi $t1, $zero,8	
	bne $v1, $t1, CHI_tuat
	la $v1, Dau
	j CHI_end
CHI_tuat:
	la $v1, Tuat
	j CHI_end

CHI_end:
 	lw $ra, 12($sp)
	addi $sp, $sp, 16
	jr $ra
